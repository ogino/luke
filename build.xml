<project name="Luke" default="dist">
	<defaultexcludes add="**/CVS"/>
	<property name="build.dir" value="build"/>
	<property name="build.ver" value="7.5.0"/>
        <property name="lucene.version" value="${build.ver}"/>
        <property name="elasticsearch.version" value="6.4.2"/>
	<property name="dist.dir" value="dist"/>
	<property name="merge.dir" value="${build.dir}/merge"/>
        <property name="jarfile" value="${build.dir}/luke-${build.ver}.jar"/>
	<property name="jarallfile" value="${build.dir}/lukeall-${build.ver}.jar"/>
	<property name="jarminfile" value="${build.dir}/lukemin-${build.ver}.jar"/>
	<property name="srczip" value="${dist.dir}/luke-src-${build.ver}.zip"/>
	<property name="srctgz" value="${dist.dir}/luke-src-${build.ver}.tgz"/>
	<target name="init" depends="-check-lucene, download-lucene, -check-elasticsearch, download-elasticsearch">
		<tstamp/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>

	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>
        
<property name="lucene-core.jar" value="lucene-core-${lucene.version}.jar"/>
<property name="lucene-backward-codecs.jar" value="lucene-backward-codecs-${lucene.version}.jar"/>
<property name="lucene-analyzers-common.jar" value="lucene-analyzers-common-${lucene.version}.jar"/>
<property name="lucene-analyzers-kuromoji.jar" value="lucene-analyzers-kuromoji-${lucene.version}.jar"/>
<property name="lucene-misc.jar" value="lucene-misc-${lucene.version}.jar"/>
<!-- suggest is needed just for elasticsearch indexes if we'd merge their postings fully, 
but org.elasticsearch.search.suggest.completion.Completion090PostingsFormat cannot be added due to 
dependency on old lucene (4.x)  so below will be usefull once elasticsearch is on lucene 5.x -->
<property name="lucene-suggest.jar" value="lucene-suggest-${lucene.version}.jar"/>
<property name="lucene-queries.jar" value="lucene-queries-${lucene.version}.jar"/>
<property name="lucene-queryparser.jar" value="lucene-queryparser-${lucene.version}.jar"/>
<property name="solr-core.jar" value="solr-core-${lucene.version}.jar"/>
<property name="solr-solrj.jar" value="solr-solrj-${lucene.version}.jar"/>
<property name="elasticsearch.jar" value="elasticsearch-${elasticsearch.version}.jar"/>
<property name="libdir" value="lib"/>
<property name="solrlibdir" value="${libdir}/solr"/>
<property name="file.reference.lucene-core.jar" value="${libdir}/${lucene-core.jar}"/>
<property name="file.reference.lucene-backward-codecs.jar" value="${libdir}/${lucene-backward-codecs.jar}"/>
<property name="file.reference.lucene-analyzers-common.jar" value="${libdir}/${lucene-analyzers-common.jar}"/>
<property name="file.reference.lucene-analyzers-kuromoji.jar" value="${libdir}/${lucene-analyzers-kuromoji.jar}"/>
<property name="file.reference.lucene-misc.jar" value="${libdir}/${lucene-misc.jar}"/>
<property name="file.reference.lucene-suggest.jar" value="${libdir}/${lucene-suggest.jar}"/>
<property name="file.reference.lucene-queries.jar" value="${libdir}/${lucene-queries.jar}"/>
<property name="file.reference.lucene-queryparser.jar" value="${libdir}/${lucene-queryparser.jar}"/>
<property name="file.reference.solr-core.jar" value="${solrlibdir}/${solr-core.jar}"/>
<property name="file.reference.solr-solrj.jar" value="${solrlibdir}/${solr-solrj.jar}"/>
<property name="file.reference.elasticsearch.jar" value="${libdir}/${elasticsearch.jar}"/>

    <property name="mvn.repository" value="http://repo1.maven.org/maven2"/>

    <path id="plainlib.search.path">        
        <pathelement path="${libdir}"/>
        <pathelement path="../${libdir}"/>
        <pathelement path="${solrlibdir}"/>
        <pathelement path="../${solrlibdir}"/>
    </path>    
    
    <target name="-check-lucene" description="Check that lucene jar files are present">
        <available file="${lucene-core.jar}" type="file" property="lucene-core.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available> 
        <available file="${lucene-backward-codecs.jar}" type="file" property="lucene-backward-codecs.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available>         
        <available file="${lucene-analyzers-common.jar}" type="file" property="lucene-analyzers-common.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available>
        <available file="${lucene-analyzers-kuromoji.jar}" type="file" property="lucene-analyzers-kuromoji.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available> 
        <available file="${lucene-misc.jar}" type="file" property="lucene-misc.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available>
        <available file="${lucene-suggest.jar}" type="file" property="lucene-suggest.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available>
        <available file="${lucene-queries.jar}" type="file" property="lucene-queries.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available>         
        <available file="${lucene-queryparser.jar}" type="file" property="lucene-queryparser.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available>         
        <available file="${solr-core.jar}" type="file" property="solr-core.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available> 
        <available file="${solr-solrj.jar}" type="file" property="solr-solrj.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available> 
        <condition property="lucene_not_downloaded">
            <not>
            <and>
                <isset property="lucene-core.jar.present"/>
                <isset property="lucene-backward-codecs.jar.present"/>
                <isset property="lucene-analyzers-common.jar.present"/>
                <isset property="lucene-analyzers-kuromoji.jar.present"/>
                <isset property="lucene-misc.jar.present"/>
                <isset property="lucene-suggest.jar.present"/>                
                <isset property="lucene-queries.jar.present"/>
                <isset property="lucene-queryparser.jar.present"/>                
                <isset property="solr-core.jar.present"/>
                <isset property="solr-solrj.jar.present"/>
             </and>
             </not>
        </condition>         
    </target>
    
    <target name="-check-elasticsearch" description="Check that elasticsearch jar file is present">
        <available file="${elasticsearch.jar}" type="file" property="elasticsearch.jar.present">
            <filepath refid="plainlib.search.path"/>
        </available> 
        <condition property="elasticsearch_not_downloaded">
            <not>            
                <isset property="elasticsearch.jar.present"/>                
             </not>
        </condition>         
    </target>
    
    <target name="download-elasticsearch" depends="-check-elasticsearch" if="elasticsearch_not_downloaded">        
        <delete>
         <fileset dir="${libdir}">
          <include name="elasticsearch-*.jar"/>
         </fileset>
        </delete>        
        <get src="${mvn.repository}/org/elasticsearch/elasticsearch/${elasticsearch.version}/${elasticsearch.jar}"
        dest="${file.reference.elasticsearch.jar}" verbose="true" usetimestamp="true"/>        
    </target>        
    
    <target name="download-lucene" depends="-check-lucene" if="lucene_not_downloaded">
        <mkdir dir="${solrlibdir}"/>
        <delete>
         <fileset dir="${libdir}">
          <include name="lucene-*.jar"/>          
         </fileset>
        </delete>
        <delete>
         <fileset dir="${solrlibdir}">
          <include name="solr-*.jar"/>          
         </fileset>
        </delete>        
        <get src="${mvn.repository}/org/apache/lucene/lucene-core/${lucene.version}/${lucene-core.jar}"
        dest="${file.reference.lucene-core.jar}" verbose="true" usetimestamp="true"/>
        <get src="${mvn.repository}/org/apache/lucene/lucene-backward-codecs/${lucene.version}/${lucene-backward-codecs.jar}"
        dest="${file.reference.lucene-backward-codecs.jar}" verbose="true" usetimestamp="true"/>        
        <get src="${mvn.repository}/org/apache/lucene/lucene-analyzers-common/${lucene.version}/${lucene-analyzers-common.jar}"
        dest="${file.reference.lucene-analyzers-common.jar}" verbose="true" usetimestamp="true"/>
        <get src="${mvn.repository}/org/apache/lucene/lucene-analyzers-kuromoji/${lucene.version}/${lucene-analyzers-kuromoji.jar}"
        dest="${file.reference.lucene-analyzers-kuromoji.jar}" verbose="true" usetimestamp="true"/>
        <get src="${mvn.repository}/org/apache/lucene/lucene-misc/${lucene.version}/${lucene-misc.jar}"
        dest="${file.reference.lucene-misc.jar}" verbose="true" usetimestamp="true"/>
        <get src="${mvn.repository}/org/apache/lucene/lucene-suggest/${lucene.version}/${lucene-suggest.jar}"
        dest="${file.reference.lucene-suggest.jar}" verbose="true" usetimestamp="true"/>
        <get src="${mvn.repository}/org/apache/lucene/lucene-queries/${lucene.version}/${lucene-queries.jar}"
        dest="${file.reference.lucene-queries.jar}" verbose="true" usetimestamp="true"/>
        <get src="${mvn.repository}/org/apache/lucene/lucene-queryparser/${lucene.version}/${lucene-queryparser.jar}"
        dest="${file.reference.lucene-queryparser.jar}" verbose="true" usetimestamp="true"/>        
        <get src="${mvn.repository}/org/apache/solr/solr-core/${lucene.version}/${solr-core.jar}"
        dest="${file.reference.solr-core.jar}" verbose="true" usetimestamp="true"/>
        <get src="${mvn.repository}/org/apache/solr/solr-solrj/${lucene.version}/${solr-solrj.jar}"
        dest="${file.reference.solr-solrj.jar}" verbose="true" usetimestamp="true"/>
    </target>        
                	
	<target name="compile" depends="init">
		<javac classpath="${classpath}"
			sourcepath=""
			source="1.7"
			target="1.7"
			srcdir="src"
			debug="on"
			includeantruntime="false"
			destdir="${build.dir}">
			 <compilerarg value="-Xlint:deprecation"/> <!-- ,unchecked -->
			<classpath>
      			<fileset dir="lib">
        			<include name="**/*.jar"/>
      			</fileset>
			</classpath>
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="javadoc" depends="init">
		<javadoc sourcepath="src" packagenames="org.*" destdir="${build.dir}/api">
			<classpath>
      				<fileset dir="lib">
        				<include name="**/*.jar"/>
      				</fileset>
			</classpath>
		</javadoc>
	</target>
	
	<target depends="compile" name="jar">
		<copy todir="${build.dir}">
			<fileset dir="src/">
				<include name="**/*.gif"/>
				<include name="**/*.png"/>
				<include name="**/*.xml"/>
				<include name="**/*.js"/>
				<include name=".plugins"/>
			</fileset>
		</copy>
		<jar basedir="${build.dir}"
			jarfile="${jarfile}"
			includes="img/,org/,thinlet/,xml/"
				excludes="org/getopt/luke/plugins,**/*.js,**/Thumbs.db">
			<manifest>
				<attribute name="Main-Class" value="org.getopt.luke.Luke"/>
				<attribute name="Classpath" value="${lucene-core.jar};js.jar;${lucene-misc.jar};${lucene-suggest.jar};${lucene-backward-codecs.jar};${elasticsearch.jar}"/>
			</manifest>
		</jar>
		<unjar dest="${build.dir}">
			<fileset dir="lib" includes="lucene-*.jar"/>
		</unjar>
		<jar basedir="${build.dir}"
			jarfile="${jarminfile}"
			includes=".plugins,img/,org/,thinlet/,xml/"
		        excludes="org/mozilla/,org/getopt/luke/plugins,**/*.js">
			<manifest>
				<attribute name="Main-Class" value="org.getopt.luke.Luke"/>
				<attribute name="Classpath" value="${lucene-core.jar};${lucene-misc.jar};${lucene-suggest.jar};${lucene-backward-codecs.jar};${elasticsearch.jar}"/>
			</manifest>
		</jar>
		<unjar dest="${build.dir}">
			<fileset dir="lib" includes="js.jar"/>
			<fileset dir="lib" includes="lucene*.jar"/>
		</unjar>
		<unjar dest="${build.dir}">
			<fileset dir="lib" includes="hadoop/*.jar"/>
		</unjar>
		<unjar dest="${build.dir}">
			<fileset dir="lib" includes="solr/*.jar"/>
		</unjar>
                <!-- including elasticsearch -->
		<unjar dest="${build.dir}">
			<fileset dir="lib" includes="elasticsearch-*.jar"/>
                        <patternset>
				<include name="org/elasticsearch/index/codec/postingsformat/**"/>                                                                
                                <include name="org/elasticsearch/common/*"/>                                
                                <include name="org/elasticsearch/common/collect/**"/>
                                <include name="org/elasticsearch/common/io/**"/>
                                <include name="org/elasticsearch/common/logging/**"/>
                                <include name="org/elasticsearch/common/settings/**"/>
                                <include name="org/elasticsearch/common/unit/**"/>
                                <include name="org/elasticsearch/common/util/**"/>
                                <include name="org/elasticsearch/*"/> 
                                <!--<include name="org/elasticsearch/search/suggest/completion/**"/> -->
			</patternset>
                </unjar>
		<unjar dest="${build.dir}">
			<fileset dir="lib" includes="lucene-core-*.jar"/>
			<patternset>
				<include name="META-INF/**"/>
			</patternset>
		</unjar>
		<manifest file="${build.dir}/META-INF/MANIFEST.MF" mode="update">
			<attribute name="Main-Class" value="org.getopt.luke.Luke"/>
		</manifest>
                <unjar dest="${merge.dir}">
			<fileset dir="lib" includes="lucene-backward-codecs-*.jar"/>
			<patternset>
				<include name="META-INF/**"/>
			</patternset>
		</unjar>
                <concat destfile="${merge.dir}/org.apache.lucene.codecs.Codec">                    
                    <filelist dir="${build.dir}/META-INF/services/" files="org.apache.lucene.codecs.Codec"/>
                    <filelist dir="${merge.dir}/META-INF/services/" files="org.apache.lucene.codecs.Codec"/>
                </concat>
                <concat destfile="${merge.dir}/org.apache.lucene.codecs.DocValuesFormat">                    
                    <filelist dir="${build.dir}/META-INF/services/" files="org.apache.lucene.codecs.DocValuesFormat"/>
                    <filelist dir="${merge.dir}/META-INF/services/" files="org.apache.lucene.codecs.DocValuesFormat"/>                    
                </concat>
                <concat destfile="${merge.dir}/org.apache.lucene.codecs.PostingsFormat">                    
                    <filelist dir="${build.dir}/META-INF/services/" files="org.apache.lucene.codecs.PostingsFormat"/>
                    <filelist dir="${merge.dir}/META-INF/services/" files="org.apache.lucene.codecs.PostingsFormat"/>
                </concat>
                <copy todir="${build.dir}/META-INF/services/">
			<fileset dir="${merge.dir}/">
				<include name="org.apache.lucene.codecs.Codec"/>
				<include name="org.apache.lucene.codecs.DocValuesFormat"/>
				<include name="org.apache.lucene.codecs.PostingsFormat"/>				
			</fileset>
		</copy>
                <!-- including elasticsearch -->		
                <unjar dest="${merge.dir}">
			<fileset dir="lib" includes="elasticsearch-*.jar"/>
			<patternset>
				<include name="META-INF/**"/>
			</patternset>
		</unjar>
                <concat destfile="${merge.dir}/org.apache.lucene.codecs.Codec">                    
                    <filelist dir="${build.dir}/META-INF/services/" files="org.apache.lucene.codecs.Codec"/>
                    <filelist dir="${merge.dir}/META-INF/services/" files="org.apache.lucene.codecs.Codec"/>
                </concat>
                <concat destfile="${merge.dir}/org.apache.lucene.codecs.DocValuesFormat">                    
                    <filelist dir="${build.dir}/META-INF/services/" files="org.apache.lucene.codecs.DocValuesFormat"/>
                    <filelist dir="${merge.dir}/META-INF/services/" files="org.apache.lucene.codecs.DocValuesFormat"/>                    
                </concat>
                <concat destfile="${merge.dir}/org.apache.lucene.codecs.PostingsFormat">
                    <filelist dir="${build.dir}/META-INF/services/" files="org.apache.lucene.codecs.PostingsFormat"/>
                    <filelist dir="${merge.dir}/META-INF/services/" files="org.apache.lucene.codecs.PostingsFormat"/>
                </concat>                    
<!--                <concat destfile="${build.dir}/META-INF/services/org.apache.lucene.codecs.PostingsFormat" append="true">org.elasticsearch.index.codec.postingsformat.Elasticsearch090PostingsFormat
 -->
                <!-- org.elasticsearch.index.codec.postingsformat.BloomFilterPostingsFormat -->
                <!-- org.elasticsearch.search.suggest.completion.Completion090PostingsFormat -->
                <!-- <copy todir="${build.dir}/META-INF/services/">
			<fileset dir="${merge.dir}/">
				<include name="org.apache.lucene.codecs.Codec"/>
				<include name="org.apache.lucene.codecs.DocValuesFormat"/>
				<include name="org.apache.lucene.codecs.PostingsFormat"/>				
			</fileset>
		</copy> -->                
		<jar basedir="${build.dir}"
			jarfile="${jarallfile}"
			manifest="${build.dir}/META-INF/MANIFEST.MF"
			includes=".plugins,img/,net/,com/,org/,thinlet/,xml/,**/*.properties,**/*.xml" >
			<metainf dir="${build.dir}/META-INF" includes="*/**"/>
		</jar>
	</target>
	
	<target name="dist" depends="clean,jar">
		<fileset dir=".">
			<patternset id="distfiles">
				<exclude name="eclipse/**"/>
				<exclude name="extras/**"/>
				<exclude name="sandbox/**"/>
				<exclude name="index/**"/>
			    <exclude name="${build.dir}/**"/>
				<exclude name="${dist.dir}/**"/>
			</patternset>
		</fileset>
		<copy todir="${dist.dir}">
			<fileset dir="lib"/>
			<fileset file="${jarfile}"/>
			<fileset file="${jarallfile}"/>
			<fileset file="${jarminfile}"/>
		</copy>
		<zip destfile="${srczip}">
			<zipfileset dir="." prefix="luke-${build.ver}">
				<patternset refid="distfiles"/>
			</zipfileset>
		</zip>
		<tar compression="gzip" destfile="${srctgz}">
			<tarfileset dir="." prefix="luke-${build.ver}">
				<patternset refid="distfiles"/>
			</tarfileset>
		</tar>
	</target>
</project>
